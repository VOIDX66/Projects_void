<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <title>Crear Partido</title>
    <style>
        .team-list {
            min-height: 200px;
            border: 1px dashed #ccc;
            padding: 10px;
            margin-top: 10px;
            overflow-y: auto;
        }
        .team-list .list-group-item {
            cursor: grab;
        }
        .team-list.drag-over {
            background-color: #e9ecef;
            border-color: #007bff;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center">Crear Partido</h1>
        <label for="opciones">Opciones de generación:</label>
        <select id="opciones" class="form-select mb-3">
            <option value="1">Mejor Puntaje</option>
            <option value="2">Más Frecuentes</option>
            <option value="3">Aleatorio</option>
        </select>
        <button class="btn btn-primary mb-3" onclick="generarEquipos()">Generar Equipos</button>

        <div class="row">
            <!-- Equipo 1 -->
            <div class="col-md-4">
                <h3 class="text-center">Equipo 1</h3>
                <input type="text" id="nombreEquipo1" class="form-control mb-2" placeholder="Nombre del Equipo 1" required>
                <div id="equipo1" class="team-list" ondrop="drop(event, 'equipo1')" ondragover="allowDrop(event)">
                </div>
            </div>

            <!-- Jugadores Disponibles -->
            <div class="col-md-4">
                <h3 class="text-center">Jugadores Disponibles</h3>
                <div id="disponibles" class="team-list" ondrop="drop(event, 'disponibles')" ondragover="allowDrop(event)">
                </div>
            </div>

            <!-- Equipo 2 -->
            <div class="col-md-4">
                <h3 class="text-center">Equipo 2</h3>
                <input type="text" id="nombreEquipo2" class="form-control mb-2" placeholder="Nombre del Equipo 2" required>
                <div id="equipo2" class="team-list" ondrop="drop(event, 'equipo2')" ondragover="allowDrop(event)">
                </div>
            </div>
        </div>

        <!-- Campo para seleccionar la fecha del partido -->
        <label for="fechaPartido" class="mt-4">Fecha y Hora del Partido:</label>
        <input type="datetime-local" id="fechaPartido" name="fechaPartido" class="form-control mb-3" required>

        <form action="/confirmar_equipos" method="POST" class="mt-4">
            <input type="hidden" name="equipo1" id="inputEquipo1">
            <input type="hidden" name="equipo2" id="inputEquipo2">
            <input type="hidden" name="fecha" id="inputFecha">
            <input type="hidden" name="nombreEquipo1" id="inputNombreEquipo1">
            <input type="hidden" name="nombreEquipo2" id="inputNombreEquipo2">
            <button type="submit" class="btn btn-success w-100">Confirmar Equipos</button>
        </form>

        <button onclick="window.history.back();" class="btn btn-secondary">Volver Atrás</button>
    </div>

    <script>
        const jugadores = <%- JSON.stringify(jugadores) %>;

        let equipo1 = [];
        let equipo2 = [];
        let disponibles = [...jugadores];

        // Renderiza las listas
        function renderEquipos() {
            const renderList = (list, containerId) => {
                const container = document.getElementById(containerId);
                container.innerHTML = list.map(j => `
                    <div class="list-group-item" draggable="true" ondragstart="drag(event)" data-id="${j.id_jugador}">
                        ${j.nombre} (Puntaje: ${j.puntuacion})
                    </div>
                `).join('');
            };

            renderList(equipo1, 'equipo1');
            renderList(equipo2, 'equipo2');
            renderList(disponibles, 'disponibles');
        }

        // Permite el "drop"
        function allowDrop(event) {
            event.preventDefault();
            event.target.classList.add('drag-over');
        }

        function dragLeave(event) {
            event.target.classList.remove('drag-over');
        }

        function drag(event) {
            event.dataTransfer.setData('id', event.target.dataset.id);
        }

        function drop(event, targetId) {
            event.preventDefault();
            event.target.classList.remove('drag-over');

            const jugadorId = parseInt(event.dataTransfer.getData('id'));
            const jugador = [...equipo1, ...equipo2, ...disponibles].find(j => j.id_jugador === jugadorId);

            if (!jugador) return;

            if (equipo1.includes(jugador)) equipo1 = equipo1.filter(j => j.id_jugador !== jugadorId);
            if (equipo2.includes(jugador)) equipo2 = equipo2.filter(j => j.id_jugador !== jugadorId);
            if (disponibles.includes(jugador)) disponibles = disponibles.filter(j => j.id_jugador !== jugadorId);

            if (targetId === 'equipo1') {
                if (equipo1.length < 5) {
                    equipo1.push(jugador);
                } else {
                    alert('Equipo 1 lleno');
                    disponibles.push(jugador);
                }
            } else if (targetId === 'equipo2') {
                if (equipo2.length < 5) {
                    equipo2.push(jugador);
                } else {
                    alert('Equipo 2 lleno');
                    disponibles.push(jugador);
                }
            } else if (targetId === 'disponibles') {
                disponibles.push(jugador);
            }

            renderEquipos();
        }

        function generarEquipos() {
            equipo1 = [];
            equipo2 = [];
            disponibles = [...jugadores];

            const seleccionada = document.getElementById('opciones').value;

            if (seleccionada === "1") {
                const sorted = [...disponibles].sort((a, b) => b.puntuacion - a.puntuacion);
                equipo1 = sorted.slice(0, 5);
                equipo2 = sorted.slice(5, 10);
                disponibles = sorted.slice(10);
            } else if (seleccionada === "2") {
                const frecuentes = disponibles.filter(j => j.model_sel === "FRECUENTE");
                if (frecuentes.length > 0) {
                    const shuffled = shuffleArray(frecuentes);
                    equipo1 = shuffled.slice(0, 5);
                    equipo2 = shuffled.slice(5, 10);
                    disponibles = disponibles.filter(j => !frecuentes.includes(j));
                } else {
                    alert("No hay jugadores frecuentes en la lista.");
                }
            } else if (seleccionada === "3") {
                const shuffled = shuffleArray(disponibles);
                equipo1 = shuffled.slice(0, 5);
                equipo2 = shuffled.slice(5, 10);
                disponibles = shuffled.slice(10);
            }

            renderEquipos();
        }

        function shuffleArray(array) {
            return array.sort(() => Math.random() - 0.5);
        }

        document.querySelector('form').addEventListener('submit', function (event) {
            event.preventDefault();

            document.getElementById('inputEquipo1').value = JSON.stringify(equipo1);
            document.getElementById('inputEquipo2').value = JSON.stringify(equipo2);
            document.getElementById('inputNombreEquipo1').value = document.getElementById('nombreEquipo1').value;
            document.getElementById('inputNombreEquipo2').value = document.getElementById('nombreEquipo2').value;

            const fechaPartido = document.getElementById('fechaPartido').value;
            if (!fechaPartido) {
                alert("Por favor, selecciona una fecha para el partido.");
                return;
            }

            document.getElementById('inputFecha').value = fechaPartido;

            this.submit();
        });

        renderEquipos();
    </script>
</body>
</html>
